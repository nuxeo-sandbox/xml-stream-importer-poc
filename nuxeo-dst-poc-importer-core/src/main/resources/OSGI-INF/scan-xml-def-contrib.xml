<?xml version="1.0"?>
<component name="org.nuxeo.dst.importer.scan.contrib">

  <!-- Doctype to create depending on XML formatting
     In this case, having an invoice tag means I should create an Invoice document in Nuxeo -->
  <extension target="org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent" point="documentMapping">
    <docConfig tagName="correspondence">
      <docType>correspondence</docType>
    </docConfig>
  </extension>

  <!-- XML to metadata mapping
       In this case, my invoice schema is as follows:
           order_number                         string
          software_source                        string
          supplier                            string
          total_inc_taxes                        float
          order_date                            date
          planned_delivery_date                date
          items                                complex, multivalued
              ref                                string
              description                        string
              amount                            float
              deliverydate                    date
  -->
  <extension target="org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent" point="attributeMapping">
    <attributeConfig tagName="title" docProperty="dc:title" xmlPath="text()"/>
    <attributeConfig tagName="SEDOL" docProperty="correspondence:SEDOL" xmlPath="text()"/>
    <attributeConfig tagName="agentID" docProperty="correspondence:agentID" xmlPath="text()"/>
    <attributeConfig tagName="brand" docProperty="correspondence:brand" xmlPath="text()"/>
    <attributeConfig tagName="businessAssociateID" docProperty="correspondence:businessAssociateID" xmlPath="text()"/>
    <attributeConfig tagName="businessOwner" docProperty="correspondence:businessOwner" xmlPath="text()"/>
    <attributeConfig tagName="configAdminOnly" docProperty="correspondence:configAdminOnly" xmlPath="text()"/>
    <attributeConfig tagName="correspondenceTypeEntry" docProperty="correspondence:correspondenceTypeEntry"
                     xmlPath="text()"/>
    <attributeConfig tagName="deliveryMethod" docProperty="correspondence:deliveryMethod" xmlPath="text()"/>
    <attributeConfig tagName="design" docProperty="correspondence:design" xmlPath="text()"/>
    <attributeConfig tagName="direction" docProperty="correspondence:direction" xmlPath="text()"/>
    <attributeConfig tagName="eventID" docProperty="correspondence:eventID" xmlPath="text()"/>
    <attributeConfig tagName="generationMethod" docProperty="correspondence:generationMethod" xmlPath="text()"/>
    <attributeConfig tagName="hidden" docProperty="correspondence:hidden" xmlPath="text()"/>
    <attributeConfig tagName="hiddenReason" docProperty="correspondence:hiddenReason" xmlPath="text()"/>
    <attributeConfig tagName="importBatchID" docProperty="correspondence:importBatchID" xmlPath="text()"/>
    <attributeConfig tagName="ingestMethod" docProperty="correspondence:ingestMethod" xmlPath="text()"/>
    <attributeConfig tagName="isDuplicate" docProperty="correspondence:isDuplicate" xmlPath="text()"/>
    <attributeConfig tagName="manco" docProperty="correspondence:manco" xmlPath="text()"/>
    <attributeConfig tagName="ownerTypeEntry" docProperty="correspondence:ownerTypeEntry" xmlPath="text()"/>
    <attributeConfig tagName="pullCode" docProperty="correspondence:pullCode" xmlPath="text()"/>
    <attributeConfig tagName="schemeID" docProperty="correspondence:schemeID" xmlPath="text()"/>
    <attributeConfig tagName="pullCode" docProperty="correspondence:pullCode" xmlPath="text()"/>


    <attributeConfig tagName="externalData" docProperty="correspondence:externalData">
      <!--<mapping documentProperty="createdDate">-->
      <!--#{-->
      <!--String date = currentElement.selectNodes('createdDate/text()')[0].getText().trim();-->
      <!--return Fn.parseDate(date, 'yyyy.MM.dd')-->
      <!--}-->
      <!--</mapping>-->
      <mapping documentProperty="documentID">documentID/text()</mapping>
      <mapping documentProperty="referenceID">referenceID/text()</mapping>
      <mapping documentProperty="sourceSystem">sourceSystem/text()</mapping>
    </attributeConfig>

    <!--<attributeConfig tagName="fundInformation" docProperty="correspondence:fundInformation">-->
    <!--<mapping documentProperty="distributionDate">-->
    <!--#{-->
    <!--String date = currentElement.selectNodes('distributionDate/text()')[0].getText().trim();-->
    <!--return Fn.parseDate(date, 'yyyy.MM.dd')-->
    <!--}-->
    <!--</mapping>-->
    <!--<mapping documentProperty="fundName">fundName/text()</mapping>-->
    <!--</attributeConfig>-->

    <attributeConfig tagName="legalOwner" docProperty="correspondence:legalOwner">
      <mapping documentProperty="address">address/text()</mapping>
      <mapping documentProperty="legalOwnerID">legalOwnerID/text()</mapping>
    </attributeConfig>

    <attributeConfig tagName="recipient" docProperty="correspondence:recipient">
      <mapping documentProperty="designation">designation/text()</mapping>
      <mapping documentProperty="email">email/text()</mapping>
      <mapping documentProperty="fax">fax/text()</mapping>
      <mapping documentProperty="name">name/text()</mapping>
      <mapping documentProperty="phone">phone/text()</mapping>
      <mapping documentProperty="postCode">postCode/text()</mapping>
    </attributeConfig>


    <!--<attributeConfig tagName="accessDate" docProperty="correspondence:accessDate">-->
    <!--#{-->
    <!--String date = currentElement.selectNodes('accessDate')[0].getText().trim();-->
    <!--return Fn.parseDate(date, 'yyyy.MM.dd')-->
    <!--}-->
    <!--</attributeConfig>-->

    <!--<attributeConfig tagName="effectiveDate" docProperty="correspondence:effectiveDate">-->
    <!--#{-->
    <!--String date = currentElement.selectNodes('effectiveDate')[0].getText().trim();-->
    <!--return Fn.parseDate(date, 'yyyy.MM.dd')-->
    <!--}-->
    <!--</attributeConfig>-->

    <!--<attributeConfig tagName="lastStateChangeDate" docProperty="correspondence:accessDate">-->
    <!--#{-->
    <!--String date = currentElement.selectNodes('lastStateChangeDate')[0].getText().trim();-->
    <!--return Fn.parseDate(date, 'yyyy.MM.dd')-->
    <!--}-->
    <!--</attributeConfig>-->
  </extension>

</component>